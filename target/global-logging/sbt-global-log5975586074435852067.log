[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\brany\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\brany\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.8 (Temurin Java 1.8.0_322)
[debug]       Load.loadUnit: plugins took 83.3991ms
[debug]       Load.loadUnit: defsScala took 0.3067ms
[debug] [Loading] Scanning directory C:\Users\brany\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\brany\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.032 ms
[debug]           Load.resolveProject(global-plugins) took 49.2216ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\brany\.sbt\1.0\plugins, plugins: List(<none>))) took 89.5494ms
[debug] [Loading] Done in C:\Users\brany\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 113.2555ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2804ms
[debug]     Load.loadUnit(file:/C:/Users/brany/.sbt/1.0/plugins/, ...) took 204.6301ms
[debug]   Load.apply: load took 372.2923ms
[debug]   Load.apply: resolveProjects took 6.0706ms
[debug]   Load.apply: finalTransforms took 52.6353ms
[debug]   Load.apply: config.delegates took 6.6304ms
[debug]   Load.apply: Def.make(settings)... took 396.3833ms
[debug]   Load.apply: structureIndex took 115.9124ms
[debug]   Load.apply: mkStreams took 2.3769ms
[info] loading global plugins from C:\Users\brany\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4059.5278ms
[debug]           Load.loadUnit: plugins took 17.5722ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\brany\Documents\Revature\Training\Projects\Project0\project
[debug]             Load.loadUnit: mkEval took 7.7822ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\brany\Documents\Revature\Training\Projects\Project0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7671 ms
[info] loading settings for project project0-build from idea.sbt ...
[debug]               Load.resolveProject(project0-build) took 5.4982ms
[debug]             Load.loadTransitive: finalizeProject(Project(id project0-build, base: C:\Users\brany\Documents\Revature\Training\Projects\Project0\project, plugins: List(<none>))) took 7.8987ms
[debug] [Loading] Done in C:\Users\brany\Documents\Revature\Training\Projects\Project0\project, returning: (project0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1764.094ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.0982ms
[debug]         Load.loadUnit(file:/C:/Users/brany/Documents/Revature/Training/Projects/Project0/project/, ...) took 1787.6836ms
[debug]       Load.apply: load took 1790.7496ms
[debug]       Load.apply: resolveProjects took 0.0861ms
[debug]       Load.apply: finalTransforms took 7.2151ms
[debug]       Load.apply: config.delegates took 0.9362ms
[debug]       Load.apply: Def.make(settings)... took 77.9264ms
[debug]       Load.apply: structureIndex took 17.0555ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\brany\Documents\Revature\Training\Projects\Project0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2367.1971ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\brany\Documents\Revature\Training\Projects\Project0
[debug]       Load.loadUnit: mkEval took 0.217ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8645 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 21.7714ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\brany\Documents\Revature\Training\Projects\Project0, plugins: List(<none>))) took 25.0513ms
[debug] [Loading] Done in C:\Users\brany\Documents\Revature\Training\Projects\Project0, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1555.9629ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.3599ms
[debug]   Load.loadUnit(file:/C:/Users/brany/Documents/Revature/Training/Projects/Project0/, ...) took 3935.3817ms
[debug] Load.apply: load took 3936.5463ms
[debug] Load.apply: resolveProjects took 0.0758ms
[debug] Load.apply: finalTransforms took 15.743ms
[debug] Load.apply: config.delegates took 0.1986ms
[debug] Load.apply: Def.make(settings)... took 47.3764ms
[debug] Load.apply: structureIndex took 14.6166ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to Project0 (in build file:/C:/Users/brany/Documents/Revature/Training/Projects/Project0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62986 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62986, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Project0 (in build file:/C:/Users/brany/Documents/Revature/Training/Projects/Project0/)
[debug] > Exec(idea-shell, None, None)
